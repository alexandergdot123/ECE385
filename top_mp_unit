module mpunit_top(
    input logic clk,
	input  logic [15:0] sw_i,
    input  logic run_i, // _i stands for input
    input  logic load_b,
	output logic 		sign_led,
	output logic [7:0]  hex_seg_a,
	output logic [3:0]  hex_grid_a,
	output logic [7:0]  hex_seg_b,
	output logic [3:0]  hex_grid_b
);
    assign sign_led = 1;
    logic op1;
    logic op2;
    logic [2:0] counter;
    logic [7:0] regA;
    logic [7:0] cur_regB;
	// Declare temporary values used by other modules
	logic load_b_once;
	//Out;
	logic load_b_s;
	logic run_once;
	logic [16:0] s;
	logic [16:0] out;
//	logic loadB_s_1;
//	logic run_s_1;
//	assign load_b_s = load_b;
//	assign run_s = run_i;
	// Synchronized inputs (denoted by _s in naming convention)
	logic run_s;
	logic [15:0] sw_s;
    
	// Allows the register to load once, and not during full duration of button press
	// ie. converts an active low button press to a single clock cycle active high event
	negedge_detector exe_run_once ( 
		.clk	(clk), 
		.in	    (run_s), 
		.out    (run_once)
	);
	negedge_detector reset_run_once ( 
		.clk	(clk), 
		.in	    (load_b_s), 
		.out    (load_b_once)
	);
	hex_driver hex_a (
		.clk		(clk),
		.reset		(load_b_once),
		.in			({4'h0, 4'h0, sw_i[7:4], sw_i[3:0]}),
		.hex_seg	(hex_seg_a),
		.hex_grid	(hex_grid_a)
	);
	logic delay_one_reset;
	always @(posedge clk) begin
	   delay_one_reset<=load_b_once;
	
	end
	multiply_unit multyboi (
        .clk(clk),
        .switches(sw_i[7:0]), //changing this to unsycnhronized for simulation purposes
        .loadB(load_b_once),
        .exe(run_once),
        .regB(out[7:0]),
        .regA(regA),
        .counter(counter),
        .opt1(opt1),
        .opt2(opt2)
    );
    assign cur_regB = out[7:0];
	hex_driver hex_b (
		.clk		(clk),
		.reset		(load_b_once),
		.in			({regA[7:4],regA[3:0], out[7:4], out[3:0]}),
		.hex_seg	(hex_seg_b),
		.hex_grid	(hex_grid_b)
	);
	// Synchchronizers/debouncers
	sync_debounce button_sync [1:0] (
	   .clk    (clk),
	   
	   .d      ({load_b, run_i}),
	   .q      ({load_b_s, run_s})
	);
endmodule
