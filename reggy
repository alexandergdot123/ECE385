module load_reg #(
) (
	input  logic	    clk, 
	input  logic	    reset, 
	input  logic	    load,
    input  logic        shift,
    input  logic        shift_in_bit,
	input  logic [7:0] data_i, // set input/output size based on parameter

	output logic [7:0] data_q
);
	always_ff @(posedge clk)
	begin
        // Setting the output data_o of the register to zeros as Reset is pressed
        if(reset) begin //notice that this is a synchronous reset
            data_q <= '0;
        end else begin
            if(load) begin
                data_q <= data_i;
            end
            else begin
                if(shift) begin
                    data_q <={shift_in_bit, data_q[7:1]};
                end
                else begin
                    data_q <= data_q;
                end
            end
        end
	end
		
endmodule
